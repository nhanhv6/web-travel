on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'package.json'

name: "Create tag and release"

permissions:
  contents: write
  packages: write
  attestations: write
  id-token: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ghcr.io/${{ github.repository }}

jobs:
  tag_and_release:
    name: Create tag and push docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Read package.json
        uses: zvonimirsun/read-package-version-actions@v2
        id: package-version

      - name: Show version number
        run: echo "Version is ${{ steps.package-version.outputs.version }}"

      - name: Check if package version has been bumped
        id: version_check
        run: |
          current_version=${{ steps.package-version.outputs.version }}
          echo "Current version: $current_version"

          git fetch --tags
          previous_version=$(git tag --sort=-v:refname | head -n 1 || echo "none")
          echo "Previous version: $previous_version"

          if [ "$previous_version" = "v$current_version" ]; then
            echo "Version has not been bumped. Skipping tagging and release."
            echo "should_continue=false" >> "$GITHUB_OUTPUT"
          else
            echo "should_continue=true" >> "$GITHUB_OUTPUT"
          fi
      
      - name: Set up Git
        if: steps.version_check.outputs.should_continue == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create and push tag
        if: steps.version_check.outputs.should_continue == 'true'
        run: |
          TAG="v${{ steps.package-version.outputs.version }}"
          git tag $TAG
          git push origin $TAG

      - name: Login to Docker Hub
        if: steps.version_check.outputs.should_continue == 'true'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        if: steps.version_check.outputs.should_continue == 'true'
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        if: steps.version_check.outputs.should_continue == 'true'
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        if: steps.version_check.outputs.should_continue == 'true'
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ steps.package-version.outputs.version }}
            ${{ env.IMAGE_NAME }}:latest
          secrets: |
            "NEXT_PUBLIC_SUPABASE_URL=${{ secrets.SUPABASE_URL }}"
            "NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}"